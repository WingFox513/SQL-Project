#pragma once

namespace SQL_Project {			//replace with name of c++ project (ex: project 12)

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace System::Data::SqlClient;
	//using namespace System::Windows::Forms::DataVisualization::Charting;


	/// <summary>
	/// Summary for MyForm
	/// </summary>
	public ref class MyForm : public System::Windows::Forms::Form
	{
	public:
		MyForm(void)
		{
			InitializeComponent();

		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~MyForm()
		{
			if (components)
			{
				delete components;
			}
		}

	protected:




	private: System::Windows::Forms::Label^ label3;
	private: System::Windows::Forms::ComboBox^ comboBox1;
	private: System::Windows::Forms::TabPage^ tabPage8;


	private: System::Windows::Forms::TabPage^ tabPage6;
	private: System::Windows::Forms::Label^ label1;
	private: System::Windows::Forms::Label^ LENTERBELOW;
	private: System::Windows::Forms::Button^ ExecuteBTN;
	private: System::Windows::Forms::TextBox^ QueryTB;
	private: System::Windows::Forms::TabPage^ tabPage5;
	private: System::Windows::Forms::RadioButton^ radioButton2;
	private: System::Windows::Forms::RadioButton^ ShowSchedRBTN;
	private: System::Windows::Forms::RadioButton^ SchedCusRBTN;
	private: System::Windows::Forms::TabPage^ tabPage4;
	private: System::Windows::Forms::RadioButton^ radioButton1;
	private: System::Windows::Forms::RadioButton^ RemTechRBTN;
	private: System::Windows::Forms::RadioButton^ AddSerToTechRBTN;
	private: System::Windows::Forms::RadioButton^ AddTechRBTN;
	private: System::Windows::Forms::TabPage^ tabPage3;
	private: System::Windows::Forms::RadioButton^ ShowSerRBTN;
	private: System::Windows::Forms::RadioButton^ RemSerRBTN;
	private: System::Windows::Forms::RadioButton^ AddSerRBTN;
	private: System::Windows::Forms::TabPage^ tabPage2;
	private: System::Windows::Forms::Label^ label2;
	private: System::Windows::Forms::RadioButton^ AddCarRBTN;
	private: System::Windows::Forms::RadioButton^ DelCarRBTN;
	private: System::Windows::Forms::RadioButton^ ShowCarRBTN;
	private: System::Windows::Forms::TabPage^ tabPage1;
	private: System::Windows::Forms::RadioButton^ DelCusRBTN;
	private: System::Windows::Forms::RadioButton^ ShowCusRBTN;
	private: System::Windows::Forms::RadioButton^ AddCustRBTN;
	private: System::Windows::Forms::TabControl^ tabControl1;
	private: System::Windows::Forms::TabPage^ tabPage7;
	private: System::Windows::Forms::Label^ label4;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker1;
	private: System::Windows::Forms::Button^ button1;
	private: System::Windows::Forms::Label^ label6;
	private: System::Windows::Forms::Label^ label5;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker3;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker2;
	private: System::Windows::Forms::Button^ button2;
	private: System::Windows::Forms::TabPage^ tabPage9;



	private: System::Windows::Forms::Label^ label8;
	private: System::Windows::Forms::ComboBox^ comboBox3;
	private: System::Windows::Forms::Label^ label9;
	private: System::Windows::Forms::ComboBox^ comboBox4;
	private: System::Windows::Forms::Label^ label10;
	private: System::Windows::Forms::Label^ label7;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker5;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker4;
	private: System::Windows::Forms::Button^ button3;
	private: System::Windows::Forms::TabPage^ tabPage10;
	private: System::Windows::Forms::Button^ button4;
	private: System::Windows::Forms::ComboBox^ comboBox2;
	private: System::Windows::Forms::Label^ label13;
	private: System::Windows::Forms::Label^ label12;
	private: System::Windows::Forms::Label^ label11;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker7;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker6;
	private: System::Windows::Forms::TabPage^ tabPage11;
	private: System::Windows::Forms::ComboBox^ comboBox5;
	private: System::Windows::Forms::Button^ button5;
	private: System::Windows::Forms::Label^ label14;
	private: System::Windows::Forms::TabPage^ tabPage12;
	private: System::Windows::Forms::Button^ button6;
	private: System::Windows::Forms::Button^ button7;
	private: System::Windows::Forms::Label^ label16;
	private: System::Windows::Forms::Label^ label15;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker9;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker8;
	private: System::Windows::Forms::TabPage^ tabPage13;
	private: System::Windows::Forms::Label^ label18;
	private: System::Windows::Forms::Label^ label17;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker11;
	private: System::Windows::Forms::DateTimePicker^ dateTimePicker10;
	//private: System::Windows::Forms::DataVisualization::Charting::Chart^ chart1;
	private: System::Windows::Forms::Label^ label19;
	private: System::Windows::Forms::Label^ label20;
private: System::Windows::Forms::RadioButton^ addCartoCustomerRBTN;


































	private: System::ComponentModel::IContainer^ components;


	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>


#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			this->comboBox1 = (gcnew System::Windows::Forms::ComboBox());
			this->label3 = (gcnew System::Windows::Forms::Label());
			this->tabPage8 = (gcnew System::Windows::Forms::TabPage());
			this->label9 = (gcnew System::Windows::Forms::Label());
			this->comboBox4 = (gcnew System::Windows::Forms::ComboBox());
			this->button2 = (gcnew System::Windows::Forms::Button());
			this->label6 = (gcnew System::Windows::Forms::Label());
			this->label5 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker3 = (gcnew System::Windows::Forms::DateTimePicker());
			this->dateTimePicker2 = (gcnew System::Windows::Forms::DateTimePicker());
			this->tabPage6 = (gcnew System::Windows::Forms::TabPage());
			this->label1 = (gcnew System::Windows::Forms::Label());
			this->LENTERBELOW = (gcnew System::Windows::Forms::Label());
			this->ExecuteBTN = (gcnew System::Windows::Forms::Button());
			this->QueryTB = (gcnew System::Windows::Forms::TextBox());
			this->tabPage5 = (gcnew System::Windows::Forms::TabPage());
			this->radioButton2 = (gcnew System::Windows::Forms::RadioButton());
			this->ShowSchedRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->SchedCusRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabPage4 = (gcnew System::Windows::Forms::TabPage());
			this->button6 = (gcnew System::Windows::Forms::Button());
			this->radioButton1 = (gcnew System::Windows::Forms::RadioButton());
			this->RemTechRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->AddSerToTechRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->AddTechRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabPage3 = (gcnew System::Windows::Forms::TabPage());
			this->ShowSerRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->RemSerRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->AddSerRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabPage2 = (gcnew System::Windows::Forms::TabPage());
			this->label2 = (gcnew System::Windows::Forms::Label());
			this->AddCarRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->DelCarRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->ShowCarRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabPage1 = (gcnew System::Windows::Forms::TabPage());
			this->DelCusRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->ShowCusRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->AddCustRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabControl1 = (gcnew System::Windows::Forms::TabControl());
			this->tabPage7 = (gcnew System::Windows::Forms::TabPage());
			this->label8 = (gcnew System::Windows::Forms::Label());
			this->comboBox3 = (gcnew System::Windows::Forms::ComboBox());
			this->button1 = (gcnew System::Windows::Forms::Button());
			this->label4 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker1 = (gcnew System::Windows::Forms::DateTimePicker());
			this->tabPage9 = (gcnew System::Windows::Forms::TabPage());
			this->button3 = (gcnew System::Windows::Forms::Button());
			this->label10 = (gcnew System::Windows::Forms::Label());
			this->label7 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker5 = (gcnew System::Windows::Forms::DateTimePicker());
			this->dateTimePicker4 = (gcnew System::Windows::Forms::DateTimePicker());
			this->tabPage10 = (gcnew System::Windows::Forms::TabPage());
			this->button4 = (gcnew System::Windows::Forms::Button());
			this->comboBox2 = (gcnew System::Windows::Forms::ComboBox());
			this->label13 = (gcnew System::Windows::Forms::Label());
			this->label12 = (gcnew System::Windows::Forms::Label());
			this->label11 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker7 = (gcnew System::Windows::Forms::DateTimePicker());
			this->dateTimePicker6 = (gcnew System::Windows::Forms::DateTimePicker());
			this->tabPage11 = (gcnew System::Windows::Forms::TabPage());
			this->label14 = (gcnew System::Windows::Forms::Label());
			this->comboBox5 = (gcnew System::Windows::Forms::ComboBox());
			this->button5 = (gcnew System::Windows::Forms::Button());
			this->tabPage12 = (gcnew System::Windows::Forms::TabPage());
			this->button7 = (gcnew System::Windows::Forms::Button());
			this->label16 = (gcnew System::Windows::Forms::Label());
			this->label15 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker9 = (gcnew System::Windows::Forms::DateTimePicker());
			this->dateTimePicker8 = (gcnew System::Windows::Forms::DateTimePicker());
			this->tabPage13 = (gcnew System::Windows::Forms::TabPage());
			this->label20 = (gcnew System::Windows::Forms::Label());
			this->label19 = (gcnew System::Windows::Forms::Label());
			this->label18 = (gcnew System::Windows::Forms::Label());
			this->label17 = (gcnew System::Windows::Forms::Label());
			this->dateTimePicker11 = (gcnew System::Windows::Forms::DateTimePicker());
			this->dateTimePicker10 = (gcnew System::Windows::Forms::DateTimePicker());
			this->addCartoCustomerRBTN = (gcnew System::Windows::Forms::RadioButton());
			this->tabPage8->SuspendLayout();
			this->tabPage6->SuspendLayout();
			this->tabPage5->SuspendLayout();
			this->tabPage4->SuspendLayout();
			this->tabPage3->SuspendLayout();
			this->tabPage2->SuspendLayout();
			this->tabPage1->SuspendLayout();
			this->tabControl1->SuspendLayout();
			this->tabPage7->SuspendLayout();
			this->tabPage9->SuspendLayout();
			this->tabPage10->SuspendLayout();
			this->tabPage11->SuspendLayout();
			this->tabPage12->SuspendLayout();
			this->tabPage13->SuspendLayout();
			this->SuspendLayout();
			// 
			// comboBox1
			// 
			this->comboBox1->FormattingEnabled = true;
			this->comboBox1->Location = System::Drawing::Point(15, 33);
			this->comboBox1->Name = L"comboBox1";
			this->comboBox1->Size = System::Drawing::Size(121, 21);
			this->comboBox1->TabIndex = 0;
			// 
			// label3
			// 
			this->label3->AutoSize = true;
			this->label3->Location = System::Drawing::Point(15, 14);
			this->label3->Name = L"label3";
			this->label3->Size = System::Drawing::Size(35, 13);
			this->label3->TabIndex = 1;
			this->label3->Text = L"label3";
			this->label3->Click += gcnew System::EventHandler(this, &MyForm::label3_Click);
			// 
			// tabPage8
			// 
			this->tabPage8->Controls->Add(this->label9);
			this->tabPage8->Controls->Add(this->comboBox4);
			this->tabPage8->Controls->Add(this->button2);
			this->tabPage8->Controls->Add(this->label6);
			this->tabPage8->Controls->Add(this->label5);
			this->tabPage8->Controls->Add(this->dateTimePicker3);
			this->tabPage8->Controls->Add(this->dateTimePicker2);
			this->tabPage8->Location = System::Drawing::Point(4, 22);
			this->tabPage8->Name = L"tabPage8";
			this->tabPage8->Padding = System::Windows::Forms::Padding(3);
			this->tabPage8->Size = System::Drawing::Size(891, 276);
			this->tabPage8->TabIndex = 2;
			this->tabPage8->Text = L"Number Of Jobs";
			this->tabPage8->UseVisualStyleBackColor = true;
			this->tabPage8->Click += gcnew System::EventHandler(this, &MyForm::tabPage8_Click);
			// 
			// label9
			// 
			this->label9->AutoSize = true;
			this->label9->Location = System::Drawing::Point(6, 78);
			this->label9->Name = L"label9";
			this->label9->Size = System::Drawing::Size(48, 13);
			this->label9->TabIndex = 6;
			this->label9->Text = L"Services";
			// 
			// comboBox4
			// 
			this->comboBox4->FormattingEnabled = true;
			this->comboBox4->Items->AddRange(gcnew cli::array< System::Object^  >(2) { L"Engine Oil", L"Tire Replacement" });
			this->comboBox4->Location = System::Drawing::Point(66, 78);
			this->comboBox4->Name = L"comboBox4";
			this->comboBox4->Size = System::Drawing::Size(121, 21);
			this->comboBox4->TabIndex = 5;
			// 
			// button2
			// 
			this->button2->Location = System::Drawing::Point(66, 122);
			this->button2->Name = L"button2";
			this->button2->Size = System::Drawing::Size(75, 23);
			this->button2->TabIndex = 4;
			this->button2->Text = L"OK";
			this->button2->UseVisualStyleBackColor = true;
			this->button2->Click += gcnew System::EventHandler(this, &MyForm::button2_Click);
			// 
			// label6
			// 
			this->label6->AutoSize = true;
			this->label6->Location = System::Drawing::Point(334, 40);
			this->label6->Name = L"label6";
			this->label6->Size = System::Drawing::Size(52, 13);
			this->label6->TabIndex = 3;
			this->label6->Text = L"End Date";
			// 
			// label5
			// 
			this->label5->AutoSize = true;
			this->label5->Location = System::Drawing::Point(3, 40);
			this->label5->Name = L"label5";
			this->label5->Size = System::Drawing::Size(55, 13);
			this->label5->TabIndex = 2;
			this->label5->Text = L"Start Date";
			// 
			// dateTimePicker3
			// 
			this->dateTimePicker3->Location = System::Drawing::Point(392, 34);
			this->dateTimePicker3->Name = L"dateTimePicker3";
			this->dateTimePicker3->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker3->TabIndex = 1;
			// 
			// dateTimePicker2
			// 
			this->dateTimePicker2->Location = System::Drawing::Point(66, 35);
			this->dateTimePicker2->Name = L"dateTimePicker2";
			this->dateTimePicker2->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker2->TabIndex = 0;
			// 
			// tabPage6
			// 
			this->tabPage6->Controls->Add(this->label1);
			this->tabPage6->Controls->Add(this->LENTERBELOW);
			this->tabPage6->Controls->Add(this->ExecuteBTN);
			this->tabPage6->Controls->Add(this->QueryTB);
			this->tabPage6->Location = System::Drawing::Point(4, 22);
			this->tabPage6->Margin = System::Windows::Forms::Padding(2);
			this->tabPage6->Name = L"tabPage6";
			this->tabPage6->Size = System::Drawing::Size(891, 276);
			this->tabPage6->TabIndex = 0;
			this->tabPage6->Text = L"SQL";
			this->tabPage6->UseVisualStyleBackColor = true;
			// 
			// label1
			// 
			this->label1->AutoSize = true;
			this->label1->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 20.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->label1->Location = System::Drawing::Point(220, 42);
			this->label1->Name = L"label1";
			this->label1->Size = System::Drawing::Size(221, 31);
			this->label1->TabIndex = 0;
			this->label1->Text = L"Enter SQL Query";
			// 
			// LENTERBELOW
			// 
			this->LENTERBELOW->AutoSize = true;
			this->LENTERBELOW->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->LENTERBELOW->Location = System::Drawing::Point(247, 90);
			this->LENTERBELOW->Margin = System::Windows::Forms::Padding(2, 0, 2, 0);
			this->LENTERBELOW->Name = L"LENTERBELOW";
			this->LENTERBELOW->Size = System::Drawing::Size(148, 24);
			this->LENTERBELOW->TabIndex = 3;
			this->LENTERBELOW->Text = L"ENTER BELOW";
			this->LENTERBELOW->Click += gcnew System::EventHandler(this, &MyForm::label2_Click);
			// 
			// ExecuteBTN
			// 
			this->ExecuteBTN->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 15.75F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->ExecuteBTN->Location = System::Drawing::Point(250, 186);
			this->ExecuteBTN->Name = L"ExecuteBTN";
			this->ExecuteBTN->Size = System::Drawing::Size(157, 34);
			this->ExecuteBTN->TabIndex = 2;
			this->ExecuteBTN->Text = L"Execute";
			this->ExecuteBTN->UseVisualStyleBackColor = true;
			this->ExecuteBTN->Click += gcnew System::EventHandler(this, &MyForm::ExecuteBTN_Click);
			// 
			// QueryTB
			// 
			this->QueryTB->Location = System::Drawing::Point(169, 130);
			this->QueryTB->Name = L"QueryTB";
			this->QueryTB->Size = System::Drawing::Size(318, 20);
			this->QueryTB->TabIndex = 1;
			// 
			// tabPage5
			// 
			this->tabPage5->Controls->Add(this->radioButton2);
			this->tabPage5->Controls->Add(this->ShowSchedRBTN);
			this->tabPage5->Controls->Add(this->SchedCusRBTN);
			this->tabPage5->Location = System::Drawing::Point(4, 22);
			this->tabPage5->Margin = System::Windows::Forms::Padding(2);
			this->tabPage5->Name = L"tabPage5";
			this->tabPage5->Size = System::Drawing::Size(891, 276);
			this->tabPage5->TabIndex = 0;
			this->tabPage5->Text = L"Schedule";
			this->tabPage5->UseVisualStyleBackColor = true;
			// 
			// radioButton2
			// 
			this->radioButton2->AutoSize = true;
			this->radioButton2->Location = System::Drawing::Point(40, 48);
			this->radioButton2->Margin = System::Windows::Forms::Padding(2);
			this->radioButton2->Name = L"radioButton2";
			this->radioButton2->Size = System::Drawing::Size(74, 17);
			this->radioButton2->TabIndex = 2;
			this->radioButton2->TabStop = true;
			this->radioButton2->Text = L"Pick Tech";
			this->radioButton2->UseVisualStyleBackColor = true;
			this->radioButton2->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton2_CheckedChanged);
			// 
			// ShowSchedRBTN
			// 
			this->ShowSchedRBTN->AutoSize = true;
			this->ShowSchedRBTN->Location = System::Drawing::Point(40, 68);
			this->ShowSchedRBTN->Margin = System::Windows::Forms::Padding(2);
			this->ShowSchedRBTN->Name = L"ShowSchedRBTN";
			this->ShowSchedRBTN->Size = System::Drawing::Size(100, 17);
			this->ShowSchedRBTN->TabIndex = 1;
			this->ShowSchedRBTN->Text = L"Show Schedule";
			this->ShowSchedRBTN->UseVisualStyleBackColor = true;
			// 
			// SchedCusRBTN
			// 
			this->SchedCusRBTN->AutoSize = true;
			this->SchedCusRBTN->Location = System::Drawing::Point(40, 28);
			this->SchedCusRBTN->Margin = System::Windows::Forms::Padding(2);
			this->SchedCusRBTN->Name = L"SchedCusRBTN";
			this->SchedCusRBTN->Size = System::Drawing::Size(117, 17);
			this->SchedCusRBTN->TabIndex = 0;
			this->SchedCusRBTN->TabStop = true;
			this->SchedCusRBTN->Text = L"Schedule Customer";
			this->SchedCusRBTN->UseVisualStyleBackColor = true;
			this->SchedCusRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton12_CheckedChanged);
			// 
			// tabPage4
			// 
			this->tabPage4->Controls->Add(this->button6);
			this->tabPage4->Controls->Add(this->radioButton1);
			this->tabPage4->Controls->Add(this->RemTechRBTN);
			this->tabPage4->Controls->Add(this->AddSerToTechRBTN);
			this->tabPage4->Controls->Add(this->AddTechRBTN);
			this->tabPage4->Location = System::Drawing::Point(4, 22);
			this->tabPage4->Margin = System::Windows::Forms::Padding(2);
			this->tabPage4->Name = L"tabPage4";
			this->tabPage4->Size = System::Drawing::Size(891, 276);
			this->tabPage4->TabIndex = 0;
			this->tabPage4->Text = L"Technicians";
			this->tabPage4->UseVisualStyleBackColor = true;
			// 
			// button6
			// 
			this->button6->Location = System::Drawing::Point(40, 119);
			this->button6->Name = L"button6";
			this->button6->Size = System::Drawing::Size(141, 23);
			this->button6->TabIndex = 4;
			this->button6->Text = L"Technicians with no Work";
			this->button6->UseVisualStyleBackColor = true;
			this->button6->Click += gcnew System::EventHandler(this, &MyForm::button6_Click);
			// 
			// radioButton1
			// 
			this->radioButton1->AutoSize = true;
			this->radioButton1->Location = System::Drawing::Point(40, 95);
			this->radioButton1->Name = L"radioButton1";
			this->radioButton1->Size = System::Drawing::Size(80, 17);
			this->radioButton1->TabIndex = 3;
			this->radioButton1->Text = L"Show Tech";
			this->radioButton1->UseVisualStyleBackColor = true;
			// 
			// RemTechRBTN
			// 
			this->RemTechRBTN->AutoSize = true;
			this->RemTechRBTN->Location = System::Drawing::Point(40, 72);
			this->RemTechRBTN->Margin = System::Windows::Forms::Padding(2);
			this->RemTechRBTN->Name = L"RemTechRBTN";
			this->RemTechRBTN->Size = System::Drawing::Size(93, 17);
			this->RemTechRBTN->TabIndex = 2;
			this->RemTechRBTN->Text = L"Remove Tech";
			this->RemTechRBTN->UseVisualStyleBackColor = true;
			this->RemTechRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::RemTechRBTN_CheckedChanged);
			// 
			// AddSerToTechRBTN
			// 
			this->AddSerToTechRBTN->AutoSize = true;
			this->AddSerToTechRBTN->Location = System::Drawing::Point(40, 50);
			this->AddSerToTechRBTN->Margin = System::Windows::Forms::Padding(2);
			this->AddSerToTechRBTN->Name = L"AddSerToTechRBTN";
			this->AddSerToTechRBTN->Size = System::Drawing::Size(123, 17);
			this->AddSerToTechRBTN->TabIndex = 1;
			this->AddSerToTechRBTN->Text = L"Add Service to Tech";
			this->AddSerToTechRBTN->UseVisualStyleBackColor = true;
			this->AddSerToTechRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::AddSerToTechRBTN_CheckedChanged);
			// 
			// AddTechRBTN
			// 
			this->AddTechRBTN->AutoSize = true;
			this->AddTechRBTN->Location = System::Drawing::Point(40, 29);
			this->AddTechRBTN->Margin = System::Windows::Forms::Padding(2);
			this->AddTechRBTN->Name = L"AddTechRBTN";
			this->AddTechRBTN->Size = System::Drawing::Size(72, 17);
			this->AddTechRBTN->TabIndex = 0;
			this->AddTechRBTN->TabStop = true;
			this->AddTechRBTN->Text = L"Add Tech";
			this->AddTechRBTN->UseVisualStyleBackColor = true;
			this->AddTechRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::AddTechRBTN_CheckedChanged);
			// 
			// tabPage3
			// 
			this->tabPage3->Controls->Add(this->ShowSerRBTN);
			this->tabPage3->Controls->Add(this->RemSerRBTN);
			this->tabPage3->Controls->Add(this->AddSerRBTN);
			this->tabPage3->Location = System::Drawing::Point(4, 22);
			this->tabPage3->Margin = System::Windows::Forms::Padding(2);
			this->tabPage3->Name = L"tabPage3";
			this->tabPage3->Size = System::Drawing::Size(891, 276);
			this->tabPage3->TabIndex = 0;
			this->tabPage3->Text = L"Services";
			this->tabPage3->UseVisualStyleBackColor = true;
			// 
			// ShowSerRBTN
			// 
			this->ShowSerRBTN->AutoSize = true;
			this->ShowSerRBTN->Location = System::Drawing::Point(32, 68);
			this->ShowSerRBTN->Name = L"ShowSerRBTN";
			this->ShowSerRBTN->Size = System::Drawing::Size(96, 17);
			this->ShowSerRBTN->TabIndex = 2;
			this->ShowSerRBTN->TabStop = true;
			this->ShowSerRBTN->Text = L"Show Services";
			this->ShowSerRBTN->UseVisualStyleBackColor = true;
			// 
			// RemSerRBTN
			// 
			this->RemSerRBTN->AutoSize = true;
			this->RemSerRBTN->Location = System::Drawing::Point(32, 45);
			this->RemSerRBTN->Margin = System::Windows::Forms::Padding(2);
			this->RemSerRBTN->Name = L"RemSerRBTN";
			this->RemSerRBTN->Size = System::Drawing::Size(104, 17);
			this->RemSerRBTN->TabIndex = 1;
			this->RemSerRBTN->TabStop = true;
			this->RemSerRBTN->Text = L"Remove Service";
			this->RemSerRBTN->UseVisualStyleBackColor = true;
			this->RemSerRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::RemSerRBTN_CheckedChanged);
			// 
			// AddSerRBTN
			// 
			this->AddSerRBTN->AutoSize = true;
			this->AddSerRBTN->Location = System::Drawing::Point(32, 24);
			this->AddSerRBTN->Margin = System::Windows::Forms::Padding(2);
			this->AddSerRBTN->Name = L"AddSerRBTN";
			this->AddSerRBTN->Size = System::Drawing::Size(83, 17);
			this->AddSerRBTN->TabIndex = 0;
			this->AddSerRBTN->TabStop = true;
			this->AddSerRBTN->Text = L"Add Service";
			this->AddSerRBTN->UseVisualStyleBackColor = true;
			this->AddSerRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton7_CheckedChanged);
			// 
			// tabPage2
			// 
			this->tabPage2->Controls->Add(this->addCartoCustomerRBTN);
			this->tabPage2->Controls->Add(this->label2);
			this->tabPage2->Controls->Add(this->AddCarRBTN);
			this->tabPage2->Controls->Add(this->DelCarRBTN);
			this->tabPage2->Controls->Add(this->ShowCarRBTN);
			this->tabPage2->Location = System::Drawing::Point(4, 22);
			this->tabPage2->Margin = System::Windows::Forms::Padding(2);
			this->tabPage2->Name = L"tabPage2";
			this->tabPage2->Size = System::Drawing::Size(891, 276);
			this->tabPage2->TabIndex = 0;
			this->tabPage2->Text = L"Cars";
			this->tabPage2->UseVisualStyleBackColor = true;
			// 
			// label2
			// 
			this->label2->AutoSize = true;
			this->label2->Location = System::Drawing::Point(128, 26);
			this->label2->Margin = System::Windows::Forms::Padding(2, 0, 2, 0);
			this->label2->Name = L"label2";
			this->label2->Size = System::Drawing::Size(213, 13);
			this->label2->TabIndex = 8;
			this->label2->Text = L"car needs make, model, license plate i think";
			// 
			// AddCarRBTN
			// 
			this->AddCarRBTN->AutoSize = true;
			this->AddCarRBTN->Location = System::Drawing::Point(25, 26);
			this->AddCarRBTN->Margin = System::Windows::Forms::Padding(2);
			this->AddCarRBTN->Name = L"AddCarRBTN";
			this->AddCarRBTN->Size = System::Drawing::Size(63, 17);
			this->AddCarRBTN->TabIndex = 7;
			this->AddCarRBTN->TabStop = true;
			this->AddCarRBTN->Text = L"Add Car";
			this->AddCarRBTN->UseVisualStyleBackColor = true;
			this->AddCarRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton4_CheckedChanged);
			// 
			// DelCarRBTN
			// 
			this->DelCarRBTN->AutoSize = true;
			this->DelCarRBTN->Location = System::Drawing::Point(25, 74);
			this->DelCarRBTN->Margin = System::Windows::Forms::Padding(2);
			this->DelCarRBTN->Name = L"DelCarRBTN";
			this->DelCarRBTN->Size = System::Drawing::Size(75, 17);
			this->DelCarRBTN->TabIndex = 6;
			this->DelCarRBTN->TabStop = true;
			this->DelCarRBTN->Text = L"Delete Car";
			this->DelCarRBTN->UseVisualStyleBackColor = true;
			this->DelCarRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton5_CheckedChanged);
			// 
			// ShowCarRBTN
			// 
			this->ShowCarRBTN->AutoSize = true;
			this->ShowCarRBTN->Location = System::Drawing::Point(24, 95);
			this->ShowCarRBTN->Margin = System::Windows::Forms::Padding(2);
			this->ShowCarRBTN->Name = L"ShowCarRBTN";
			this->ShowCarRBTN->Size = System::Drawing::Size(76, 17);
			this->ShowCarRBTN->TabIndex = 5;
			this->ShowCarRBTN->TabStop = true;
			this->ShowCarRBTN->Text = L"Show Cars";
			this->ShowCarRBTN->UseVisualStyleBackColor = true;
			this->ShowCarRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton6_CheckedChanged);
			// 
			// tabPage1
			// 
			this->tabPage1->Controls->Add(this->DelCusRBTN);
			this->tabPage1->Controls->Add(this->ShowCusRBTN);
			this->tabPage1->Controls->Add(this->AddCustRBTN);
			this->tabPage1->Location = System::Drawing::Point(4, 22);
			this->tabPage1->Margin = System::Windows::Forms::Padding(2);
			this->tabPage1->Name = L"tabPage1";
			this->tabPage1->Size = System::Drawing::Size(891, 276);
			this->tabPage1->TabIndex = 0;
			this->tabPage1->Text = L"Customer";
			this->tabPage1->UseVisualStyleBackColor = true;
			this->tabPage1->Click += gcnew System::EventHandler(this, &MyForm::tabPage1_Click);
			// 
			// DelCusRBTN
			// 
			this->DelCusRBTN->AutoSize = true;
			this->DelCusRBTN->Location = System::Drawing::Point(26, 55);
			this->DelCusRBTN->Name = L"DelCusRBTN";
			this->DelCusRBTN->Size = System::Drawing::Size(108, 17);
			this->DelCusRBTN->TabIndex = 5;
			this->DelCusRBTN->Text = L"Delete Customers";
			this->DelCusRBTN->UseVisualStyleBackColor = true;
			this->DelCusRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::DelCusRBTN_CheckedChanged);
			// 
			// ShowCusRBTN
			// 
			this->ShowCusRBTN->AutoSize = true;
			this->ShowCusRBTN->Location = System::Drawing::Point(26, 77);
			this->ShowCusRBTN->Margin = System::Windows::Forms::Padding(2);
			this->ShowCusRBTN->Name = L"ShowCusRBTN";
			this->ShowCusRBTN->Size = System::Drawing::Size(104, 17);
			this->ShowCusRBTN->TabIndex = 4;
			this->ShowCusRBTN->Text = L"Show Customers";
			this->ShowCusRBTN->UseVisualStyleBackColor = true;
			this->ShowCusRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::ShowCusRBTN_CheckedChanged);
			// 
			// AddCustRBTN
			// 
			this->AddCustRBTN->AutoSize = true;
			this->AddCustRBTN->Location = System::Drawing::Point(26, 33);
			this->AddCustRBTN->Margin = System::Windows::Forms::Padding(2);
			this->AddCustRBTN->Name = L"AddCustRBTN";
			this->AddCustRBTN->Size = System::Drawing::Size(91, 17);
			this->AddCustRBTN->TabIndex = 2;
			this->AddCustRBTN->TabStop = true;
			this->AddCustRBTN->Text = L"Add Customer";
			this->AddCustRBTN->UseVisualStyleBackColor = true;
			this->AddCustRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::radioButton1_CheckedChanged);
			// 
			// tabControl1
			// 
			this->tabControl1->Controls->Add(this->tabPage1);
			this->tabControl1->Controls->Add(this->tabPage2);
			this->tabControl1->Controls->Add(this->tabPage3);
			this->tabControl1->Controls->Add(this->tabPage4);
			this->tabControl1->Controls->Add(this->tabPage5);
			this->tabControl1->Controls->Add(this->tabPage6);
			this->tabControl1->Controls->Add(this->tabPage7);
			this->tabControl1->Controls->Add(this->tabPage8);
			this->tabControl1->Controls->Add(this->tabPage9);
			this->tabControl1->Controls->Add(this->tabPage10);
			this->tabControl1->Controls->Add(this->tabPage11);
			this->tabControl1->Controls->Add(this->tabPage12);
			this->tabControl1->Controls->Add(this->tabPage13);
			this->tabControl1->Location = System::Drawing::Point(10, 2);
			this->tabControl1->Margin = System::Windows::Forms::Padding(2);
			this->tabControl1->Name = L"tabControl1";
			this->tabControl1->SelectedIndex = 0;
			this->tabControl1->Size = System::Drawing::Size(899, 302);
			this->tabControl1->TabIndex = 0;
			// 
			// tabPage7
			// 
			this->tabPage7->Controls->Add(this->label8);
			this->tabPage7->Controls->Add(this->comboBox3);
			this->tabPage7->Controls->Add(this->button1);
			this->tabPage7->Controls->Add(this->label4);
			this->tabPage7->Controls->Add(this->dateTimePicker1);
			this->tabPage7->Location = System::Drawing::Point(4, 22);
			this->tabPage7->Name = L"tabPage7";
			this->tabPage7->Padding = System::Windows::Forms::Padding(3);
			this->tabPage7->Size = System::Drawing::Size(891, 276);
			this->tabPage7->TabIndex = 1;
			this->tabPage7->Text = L"Info for Job";
			this->tabPage7->UseVisualStyleBackColor = true;
			this->tabPage7->Click += gcnew System::EventHandler(this, &MyForm::tabPage7_Click);
			// 
			// label8
			// 
			this->label8->AutoSize = true;
			this->label8->Location = System::Drawing::Point(32, 77);
			this->label8->Name = L"label8";
			this->label8->Size = System::Drawing::Size(29, 13);
			this->label8->TabIndex = 4;
			this->label8->Text = L"Jobs";
			// 
			// comboBox3
			// 
			this->comboBox3->FormattingEnabled = true;
			this->comboBox3->Items->AddRange(gcnew cli::array< System::Object^  >(2) { L"Tire Replacement", L"Engine Oil" });
			this->comboBox3->Location = System::Drawing::Point(78, 74);
			this->comboBox3->Name = L"comboBox3";
			this->comboBox3->Size = System::Drawing::Size(121, 21);
			this->comboBox3->TabIndex = 3;
			// 
			// button1
			// 
			this->button1->Location = System::Drawing::Point(78, 117);
			this->button1->Name = L"button1";
			this->button1->Size = System::Drawing::Size(75, 23);
			this->button1->TabIndex = 2;
			this->button1->Text = L"OK";
			this->button1->UseVisualStyleBackColor = true;
			this->button1->Click += gcnew System::EventHandler(this, &MyForm::button1_Click);
			// 
			// label4
			// 
			this->label4->AutoSize = true;
			this->label4->Location = System::Drawing::Point(32, 38);
			this->label4->Name = L"label4";
			this->label4->Size = System::Drawing::Size(30, 13);
			this->label4->TabIndex = 1;
			this->label4->Text = L"Date";
			// 
			// dateTimePicker1
			// 
			this->dateTimePicker1->Location = System::Drawing::Point(78, 38);
			this->dateTimePicker1->Name = L"dateTimePicker1";
			this->dateTimePicker1->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker1->TabIndex = 0;
			this->dateTimePicker1->ValueChanged += gcnew System::EventHandler(this, &MyForm::dateTimePicker1_ValueChanged_1);
			// 
			// tabPage9
			// 
			this->tabPage9->Controls->Add(this->button3);
			this->tabPage9->Controls->Add(this->label10);
			this->tabPage9->Controls->Add(this->label7);
			this->tabPage9->Controls->Add(this->dateTimePicker5);
			this->tabPage9->Controls->Add(this->dateTimePicker4);
			this->tabPage9->Location = System::Drawing::Point(4, 22);
			this->tabPage9->Name = L"tabPage9";
			this->tabPage9->Padding = System::Windows::Forms::Padding(3);
			this->tabPage9->Size = System::Drawing::Size(891, 276);
			this->tabPage9->TabIndex = 3;
			this->tabPage9->Text = L"Revenue";
			this->tabPage9->UseVisualStyleBackColor = true;
			// 
			// button3
			// 
			this->button3->Location = System::Drawing::Point(20, 82);
			this->button3->Name = L"button3";
			this->button3->Size = System::Drawing::Size(75, 23);
			this->button3->TabIndex = 4;
			this->button3->Text = L"Calculate Revenue";
			this->button3->UseVisualStyleBackColor = true;
			this->button3->Click += gcnew System::EventHandler(this, &MyForm::button3_Click_1);
			// 
			// label10
			// 
			this->label10->AutoSize = true;
			this->label10->Location = System::Drawing::Point(346, 27);
			this->label10->Name = L"label10";
			this->label10->Size = System::Drawing::Size(52, 13);
			this->label10->TabIndex = 3;
			this->label10->Text = L"End Date";
			// 
			// label7
			// 
			this->label7->AutoSize = true;
			this->label7->Location = System::Drawing::Point(17, 27);
			this->label7->Name = L"label7";
			this->label7->Size = System::Drawing::Size(55, 13);
			this->label7->TabIndex = 2;
			this->label7->Text = L"Start Date";
			// 
			// dateTimePicker5
			// 
			this->dateTimePicker5->Location = System::Drawing::Point(418, 26);
			this->dateTimePicker5->Name = L"dateTimePicker5";
			this->dateTimePicker5->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker5->TabIndex = 1;
			// 
			// dateTimePicker4
			// 
			this->dateTimePicker4->Location = System::Drawing::Point(79, 26);
			this->dateTimePicker4->Name = L"dateTimePicker4";
			this->dateTimePicker4->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker4->TabIndex = 0;
			// 
			// tabPage10
			// 
			this->tabPage10->Controls->Add(this->button4);
			this->tabPage10->Controls->Add(this->comboBox2);
			this->tabPage10->Controls->Add(this->label13);
			this->tabPage10->Controls->Add(this->label12);
			this->tabPage10->Controls->Add(this->label11);
			this->tabPage10->Controls->Add(this->dateTimePicker7);
			this->tabPage10->Controls->Add(this->dateTimePicker6);
			this->tabPage10->Location = System::Drawing::Point(4, 22);
			this->tabPage10->Name = L"tabPage10";
			this->tabPage10->Padding = System::Windows::Forms::Padding(3);
			this->tabPage10->Size = System::Drawing::Size(891, 276);
			this->tabPage10->TabIndex = 4;
			this->tabPage10->Text = L"Technician Jobs";
			this->tabPage10->UseVisualStyleBackColor = true;
			// 
			// button4
			// 
			this->button4->Location = System::Drawing::Point(30, 117);
			this->button4->Name = L"button4";
			this->button4->Size = System::Drawing::Size(75, 23);
			this->button4->TabIndex = 6;
			this->button4->Text = L"OK";
			this->button4->UseVisualStyleBackColor = true;
			this->button4->Click += gcnew System::EventHandler(this, &MyForm::button4_Click);
			// 
			// comboBox2
			// 
			this->comboBox2->FormattingEnabled = true;
			this->comboBox2->Items->AddRange(gcnew cli::array< System::Object^  >(2) { L"David S.", L"Charles P." });
			this->comboBox2->Location = System::Drawing::Point(123, 79);
			this->comboBox2->Name = L"comboBox2";
			this->comboBox2->Size = System::Drawing::Size(121, 21);
			this->comboBox2->TabIndex = 5;
			// 
			// label13
			// 
			this->label13->AutoSize = true;
			this->label13->Location = System::Drawing::Point(27, 82);
			this->label13->Name = L"label13";
			this->label13->Size = System::Drawing::Size(60, 13);
			this->label13->TabIndex = 4;
			this->label13->Text = L"Technician";
			// 
			// label12
			// 
			this->label12->AutoSize = true;
			this->label12->Location = System::Drawing::Point(390, 41);
			this->label12->Name = L"label12";
			this->label12->Size = System::Drawing::Size(52, 13);
			this->label12->TabIndex = 3;
			this->label12->Text = L"End Date";
			// 
			// label11
			// 
			this->label11->AutoSize = true;
			this->label11->Location = System::Drawing::Point(27, 41);
			this->label11->Name = L"label11";
			this->label11->Size = System::Drawing::Size(55, 13);
			this->label11->TabIndex = 2;
			this->label11->Text = L"Start Date";
			// 
			// dateTimePicker7
			// 
			this->dateTimePicker7->Location = System::Drawing::Point(467, 35);
			this->dateTimePicker7->Name = L"dateTimePicker7";
			this->dateTimePicker7->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker7->TabIndex = 1;
			// 
			// dateTimePicker6
			// 
			this->dateTimePicker6->Location = System::Drawing::Point(123, 35);
			this->dateTimePicker6->Name = L"dateTimePicker6";
			this->dateTimePicker6->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker6->TabIndex = 0;
			// 
			// tabPage11
			// 
			this->tabPage11->Controls->Add(this->label14);
			this->tabPage11->Controls->Add(this->comboBox5);
			this->tabPage11->Controls->Add(this->button5);
			this->tabPage11->Location = System::Drawing::Point(4, 22);
			this->tabPage11->Name = L"tabPage11";
			this->tabPage11->Padding = System::Windows::Forms::Padding(3);
			this->tabPage11->Size = System::Drawing::Size(891, 276);
			this->tabPage11->TabIndex = 5;
			this->tabPage11->Text = L"Customer Schedule";
			this->tabPage11->UseVisualStyleBackColor = true;
			// 
			// label14
			// 
			this->label14->AutoSize = true;
			this->label14->Location = System::Drawing::Point(6, 25);
			this->label14->Name = L"label14";
			this->label14->Size = System::Drawing::Size(51, 13);
			this->label14->TabIndex = 2;
			this->label14->Text = L"Customer";
			// 
			// comboBox5
			// 
			this->comboBox5->FormattingEnabled = true;
			this->comboBox5->Items->AddRange(gcnew cli::array< System::Object^  >(2) { L"Cim P", L"Dave S" });
			this->comboBox5->Location = System::Drawing::Point(72, 22);
			this->comboBox5->Name = L"comboBox5";
			this->comboBox5->Size = System::Drawing::Size(121, 21);
			this->comboBox5->TabIndex = 1;
			// 
			// button5
			// 
			this->button5->Location = System::Drawing::Point(72, 58);
			this->button5->Name = L"button5";
			this->button5->Size = System::Drawing::Size(75, 23);
			this->button5->TabIndex = 0;
			this->button5->Text = L"OK";
			this->button5->UseVisualStyleBackColor = true;
			this->button5->Click += gcnew System::EventHandler(this, &MyForm::button5_Click);
			// 
			// tabPage12
			// 
			this->tabPage12->Controls->Add(this->button7);
			this->tabPage12->Controls->Add(this->label16);
			this->tabPage12->Controls->Add(this->label15);
			this->tabPage12->Controls->Add(this->dateTimePicker9);
			this->tabPage12->Controls->Add(this->dateTimePicker8);
			this->tabPage12->Location = System::Drawing::Point(4, 22);
			this->tabPage12->Name = L"tabPage12";
			this->tabPage12->Padding = System::Windows::Forms::Padding(3);
			this->tabPage12->Size = System::Drawing::Size(891, 276);
			this->tabPage12->TabIndex = 6;
			this->tabPage12->Text = L"Technician Bonus";
			this->tabPage12->UseVisualStyleBackColor = true;
			// 
			// button7
			// 
			this->button7->Location = System::Drawing::Point(65, 75);
			this->button7->Name = L"button7";
			this->button7->Size = System::Drawing::Size(75, 23);
			this->button7->TabIndex = 4;
			this->button7->Text = L"OK";
			this->button7->UseVisualStyleBackColor = true;
			this->button7->Click += gcnew System::EventHandler(this, &MyForm::button7_Click);
			// 
			// label16
			// 
			this->label16->AutoSize = true;
			this->label16->Location = System::Drawing::Point(6, 33);
			this->label16->Name = L"label16";
			this->label16->Size = System::Drawing::Size(55, 13);
			this->label16->TabIndex = 3;
			this->label16->Text = L"Start Date";
			// 
			// label15
			// 
			this->label15->AutoSize = true;
			this->label15->Location = System::Drawing::Point(336, 34);
			this->label15->Name = L"label15";
			this->label15->Size = System::Drawing::Size(52, 13);
			this->label15->TabIndex = 2;
			this->label15->Text = L"End Date";
			// 
			// dateTimePicker9
			// 
			this->dateTimePicker9->Location = System::Drawing::Point(394, 28);
			this->dateTimePicker9->Name = L"dateTimePicker9";
			this->dateTimePicker9->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker9->TabIndex = 1;
			// 
			// dateTimePicker8
			// 
			this->dateTimePicker8->Location = System::Drawing::Point(65, 27);
			this->dateTimePicker8->Name = L"dateTimePicker8";
			this->dateTimePicker8->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker8->TabIndex = 0;
			// 
			// tabPage13
			// 
			this->tabPage13->Controls->Add(this->label20);
			this->tabPage13->Controls->Add(this->label19);
			this->tabPage13->Controls->Add(this->label18);
			this->tabPage13->Controls->Add(this->label17);
			this->tabPage13->Controls->Add(this->dateTimePicker11);
			this->tabPage13->Controls->Add(this->dateTimePicker10);
			this->tabPage13->Location = System::Drawing::Point(4, 22);
			this->tabPage13->Name = L"tabPage13";
			this->tabPage13->Padding = System::Windows::Forms::Padding(3);
			this->tabPage13->Size = System::Drawing::Size(891, 276);
			this->tabPage13->TabIndex = 7;
			this->tabPage13->Text = L"Graph";
			this->tabPage13->UseVisualStyleBackColor = true;
			// 
			// label20
			// 
			this->label20->AutoSize = true;
			this->label20->Location = System::Drawing::Point(81, 64);
			this->label20->Margin = System::Windows::Forms::Padding(2, 0, 2, 0);
			this->label20->Name = L"label20";
			this->label20->Size = System::Drawing::Size(152, 13);
			this->label20->TabIndex = 6;
			this->label20->Text = L"Services Done in Date Range:";
			this->label20->Click += gcnew System::EventHandler(this, &MyForm::label20_Click);
			// 
			// label19
			// 
			this->label19->AutoSize = true;
			this->label19->Location = System::Drawing::Point(100, 204);
			this->label19->Margin = System::Windows::Forms::Padding(2, 0, 2, 0);
			this->label19->Name = L"label19";
			this->label19->Size = System::Drawing::Size(58, 26);
			this->label19->TabIndex = 5;
			this->label19->Text = L"Start Date:\r\nEnd Date:";
			this->label19->Click += gcnew System::EventHandler(this, &MyForm::label19_Click);
			// 
			// label18
			// 
			this->label18->AutoSize = true;
			this->label18->Location = System::Drawing::Point(512, 106);
			this->label18->Name = L"label18";
			this->label18->Size = System::Drawing::Size(52, 13);
			this->label18->TabIndex = 3;
			this->label18->Text = L"End Date";
			// 
			// label17
			// 
			this->label17->AutoSize = true;
			this->label17->Location = System::Drawing::Point(509, 37);
			this->label17->Name = L"label17";
			this->label17->Size = System::Drawing::Size(55, 13);
			this->label17->TabIndex = 2;
			this->label17->Text = L"Start Date";
			this->label17->Click += gcnew System::EventHandler(this, &MyForm::label17_Click);
			// 
			// dateTimePicker11
			// 
			this->dateTimePicker11->Location = System::Drawing::Point(581, 106);
			this->dateTimePicker11->Name = L"dateTimePicker11";
			this->dateTimePicker11->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker11->TabIndex = 1;
			// 
			// dateTimePicker10
			// 
			this->dateTimePicker10->Location = System::Drawing::Point(581, 33);
			this->dateTimePicker10->Name = L"dateTimePicker10";
			this->dateTimePicker10->Size = System::Drawing::Size(200, 20);
			this->dateTimePicker10->TabIndex = 0;
			this->dateTimePicker10->ValueChanged += gcnew System::EventHandler(this, &MyForm::dateTimePicker10_ValueChanged);
			// 
			// addCartoCustomerRBTN
			// 
			this->addCartoCustomerRBTN->AutoSize = true;
			this->addCartoCustomerRBTN->Location = System::Drawing::Point(25, 49);
			this->addCartoCustomerRBTN->Name = L"addCartoCustomerRBTN";
			this->addCartoCustomerRBTN->Size = System::Drawing::Size(122, 17);
			this->addCartoCustomerRBTN->TabIndex = 9;
			this->addCartoCustomerRBTN->TabStop = true;
			this->addCartoCustomerRBTN->Text = L"Add Car to Customer";
			this->addCartoCustomerRBTN->UseVisualStyleBackColor = true;
			this->addCartoCustomerRBTN->CheckedChanged += gcnew System::EventHandler(this, &MyForm::addCartoCustomerRBTN_CheckedChanged);
			// 
			// MyForm
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(909, 444);
			this->Controls->Add(this->tabControl1);
			this->Name = L"MyForm";
			this->RightToLeft = System::Windows::Forms::RightToLeft::No;
			this->Text = L"SQL Query";
			this->Load += gcnew System::EventHandler(this, &MyForm::MyForm_Load);
			this->tabPage8->ResumeLayout(false);
			this->tabPage8->PerformLayout();
			this->tabPage6->ResumeLayout(false);
			this->tabPage6->PerformLayout();
			this->tabPage5->ResumeLayout(false);
			this->tabPage5->PerformLayout();
			this->tabPage4->ResumeLayout(false);
			this->tabPage4->PerformLayout();
			this->tabPage3->ResumeLayout(false);
			this->tabPage3->PerformLayout();
			this->tabPage2->ResumeLayout(false);
			this->tabPage2->PerformLayout();
			this->tabPage1->ResumeLayout(false);
			this->tabPage1->PerformLayout();
			this->tabControl1->ResumeLayout(false);
			this->tabPage7->ResumeLayout(false);
			this->tabPage7->PerformLayout();
			this->tabPage9->ResumeLayout(false);
			this->tabPage9->PerformLayout();
			this->tabPage10->ResumeLayout(false);
			this->tabPage10->PerformLayout();
			this->tabPage11->ResumeLayout(false);
			this->tabPage11->PerformLayout();
			this->tabPage12->ResumeLayout(false);
			this->tabPage12->PerformLayout();
			this->tabPage13->ResumeLayout(false);
			this->tabPage13->PerformLayout();
			this->ResumeLayout(false);

		}
#pragma endregion
	private: System::Void MyForm_Load(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void ExecuteBTN_Click(System::Object^ sender, System::EventArgs^ e) {
		String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=SQL;Integrated Security=True";        //change initial catalog to name of db

		try {
			SqlConnection^ conn = gcnew SqlConnection(connString);
			conn->Open();

			String^ query = QueryTB->Text;
			SqlCommand^ cmd = gcnew SqlCommand(query, conn);
			int rowsAffected = cmd->ExecuteNonQuery();

			MessageBox::Show("Query executed successfully! Rows affected: " + rowsAffected,
				"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

			conn->Close();
		}
		catch (Exception^ ex) {
			MessageBox::Show("Error: " + ex->Message,
				"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
		}
	}
	private: System::Void label2_Click(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void tabPage1_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void testToolStripMenuItem1_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void comboBox1_SelectedIndexChanged(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void comboBox1_SelectedIndexChanged_1(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void comboBox2_SelectedIndexChanged(System::Object^ sender, System::EventArgs^ e) {
	}
		   // Example function: CreateAddCustomerControls
	private: System::Void CreateAddCustomerControls() {
		// First, clear any existing controls on the Customer tab (tabPage1)
		tabPage1->Controls->Clear();

		// Create a label for the Customer Name
		Label^ lblName = gcnew Label();
		lblName->Text = "Customer Name:";
		lblName->Location = System::Drawing::Point(20, 20);
		tabPage1->Controls->Add(lblName);

		// Create a textbox for the Customer Name
		TextBox^ txtName = gcnew TextBox();
		txtName->Location = System::Drawing::Point(150, 20);
		txtName->Width = 200;
		tabPage1->Controls->Add(txtName);

		// Create a label for the Customer Email
		Label^ lblEmail = gcnew Label();
		lblEmail->Text = "Email:";
		lblEmail->Location = System::Drawing::Point(20, 60);
		tabPage1->Controls->Add(lblEmail);

		// Create a textbox for the Email
		TextBox^ txtEmail = gcnew TextBox();
		txtEmail->Location = System::Drawing::Point(150, 60);
		txtEmail->Width = 200;
		tabPage1->Controls->Add(txtEmail);

		// Create a button to submit the new customer
		Button^ btnSubmit = gcnew Button();
		btnSubmit->Text = "Add Customer";
		btnSubmit->Location = System::Drawing::Point(150, 100);
		btnSubmit->Click += gcnew System::EventHandler(this, &MyForm::btnSubmitCustomer_Click);
		tabPage1->Controls->Add(btnSubmit);
	}


		   // Example event handler for the dynamically created submit button:
	private: System::Void btnSubmitCustomer_Click(System::Object^ sender, System::EventArgs^ e) {
		String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
		try {
			SqlConnection^ conn = gcnew SqlConnection(connString);
			conn->Open();

			SqlCommand^ cmd = gcnew SqlCommand("INSERT INTO Customer (Cust_FN, Cust_LN, Phone) VALUES (@firstName, @lastName, @phone)", conn);
			//cmd->Parameters->AddWithValue("@firstName", firstName);
			//cmd->Parameters->AddWithValue("@lastName", lastName);
			//cmd->Parameters->AddWithValue("@phone", phone);

			int rowsAffected = cmd->ExecuteNonQuery();
			MessageBox::Show("Customer added successfully! Rows affected: " + rowsAffected);
			conn->Close();
		}
		catch (Exception^ ex) {
			MessageBox::Show("Error: " + ex->Message);
		}

	}

	private: System::Void radioButton1_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (AddCustRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Customer Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			Label^ lblID = gcnew Label();
			lblID->Text = "First Name:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "Last Name:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			TextBox^ txtFirstName = gcnew TextBox();
			txtFirstName->Location = System::Drawing::Point(120, 60);
			txtFirstName->Width = 200;
			inputForm->Controls->Add(txtFirstName);

			// Last Name label and textbox
			Label^ lblLastName = gcnew Label();
			lblLastName->Text = "Phone Number:";
			lblLastName->Location = System::Drawing::Point(10, 100);
			lblLastName->AutoSize = true;
			inputForm->Controls->Add(lblLastName);

			TextBox^ txtLastName = gcnew TextBox();
			txtLastName->Location = System::Drawing::Point(120, 100);
			txtLastName->Width = 200;
			inputForm->Controls->Add(txtLastName);



			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				
				String^ firstName = txtID->Text;
				String^ lastName = txtFirstName->Text;
				String^ phone = txtLastName->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Customer (Cust_FN, Cust_LN, Phone_#) VALUES (@firstName, @lastName, @phone)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);

					cmd->Parameters->AddWithValue("@firstName", firstName);
					cmd->Parameters->AddWithValue("@lastName", lastName);
					cmd->Parameters->AddWithValue("@phone", phone);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		AddCustRBTN->Checked = false;

	}
	private: System::Void radioButton6_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void radioButton5_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (DelCarRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Customer Details";
			inputForm->Size = System::Drawing::Size(350, 200);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 100);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ id = txtID->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "DELETE FROM Car WHERE Car_ID = @id";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@id", id);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}



		DelCusRBTN->Checked = false;

	}
	private: System::Void radioButton4_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (AddCarRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Car Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			Label^ lblID = gcnew Label();
			lblID->Text = "License Plate:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "Make:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			TextBox^ txtFirstName = gcnew TextBox();
			txtFirstName->Location = System::Drawing::Point(120, 60);
			txtFirstName->Width = 200;
			inputForm->Controls->Add(txtFirstName);

			// Last Name label and textbox
			Label^ lblLastName = gcnew Label();
			lblLastName->Text = "Model:";
			lblLastName->Location = System::Drawing::Point(10, 100);
			lblLastName->AutoSize = true;
			inputForm->Controls->Add(lblLastName);

			TextBox^ txtLastName = gcnew TextBox();
			txtLastName->Location = System::Drawing::Point(120, 100);
			txtLastName->Width = 200;
			inputForm->Controls->Add(txtLastName);



			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{

				String^ firstName = txtID->Text;
				String^ lastName = txtFirstName->Text;
				String^ phone = txtLastName->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Car (License_Plate, Make_ID, Model_ID) VALUES (@firstName, @lastName, @phone)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);

					cmd->Parameters->AddWithValue("@firstName", firstName);
					cmd->Parameters->AddWithValue("@lastName", lastName);
					cmd->Parameters->AddWithValue("@phone", phone);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		AddCarRBTN->Checked = false;

	}
	private: System::Void radioButton7_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (AddSerRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Service Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Service:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "Cost:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			TextBox^ txtFirstName = gcnew TextBox();
			txtFirstName->Location = System::Drawing::Point(120, 60);
			txtFirstName->Width = 200;
			inputForm->Controls->Add(txtFirstName);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ Service = txtID->Text;
				String^ Cost = txtFirstName->Text;


				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Services (Service_ID, Service, Cost) VALUES (@id, @Service, @Cost)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@Service", Service);
					cmd->Parameters->AddWithValue("@Cost", Cost);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}


		AddSerRBTN->Checked = false;

	}
	private: System::Void radioButton12_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (SchedCusRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Customer ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "License Plate:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			ComboBox^ comboBox4 = gcnew ComboBox();
			comboBox4->DropDownStyle = ComboBoxStyle::DropDownList;
			comboBox4->FormattingEnabled = true;
			comboBox4->Items->AddRange(gcnew cli::array< System::Object^ >(3) { L"Cust1info", L"C2info", L"C3" });
			comboBox4->Location = System::Drawing::Point(120, 60);
			comboBox4->Name = L"comboBox3";
			comboBox4->Size = System::Drawing::Size(121, 24);
			comboBox4->TabIndex = 9;

			// Add the ComboBox to the popout form (inputForm)
			inputForm->Controls->Add(comboBox4);
			String^ txtFirstName = comboBox4->Text; // or comboBox1->SelectedItem->ToString();


			// Last Name label and textbox
			Label^ lblLastName = gcnew Label();
			lblLastName->Text = "Date and Time:";
			lblLastName->Location = System::Drawing::Point(10, 100);
			lblLastName->AutoSize = true;
			inputForm->Controls->Add(lblLastName);


			// dateTimePicker1
			// 
			DateTimePicker^ dateTimePicker1 = gcnew DateTimePicker();
			dateTimePicker1->Format = DateTimePickerFormat::Custom; // Enable custom format
			dateTimePicker1->CustomFormat = "MM/dd/yyyy hh:mm tt"; // Format: Date + 12-hour time with AM/PM
			dateTimePicker1->ShowUpDown = true; // Removes the calendar dropdown, allows manual adjustment
			dateTimePicker1->Location = System::Drawing::Point(120, 100);
			dateTimePicker1->Name = L"dateTimePicker1";
			dateTimePicker1->Size = System::Drawing::Size(200, 22);
			dateTimePicker1->TabIndex = 6;
			dateTimePicker1->ValueChanged += gcnew System::EventHandler(this, &MyForm::dateTimePicker1_ValueChanged);
			inputForm->Controls->Add(dateTimePicker1);

			// Phone Number label and textbox
			Label^ lblPhone = gcnew Label();
			lblPhone->Text = "Pick Service:";
			lblPhone->Location = System::Drawing::Point(10, 140);
			lblPhone->AutoSize = true;
			inputForm->Controls->Add(lblPhone);

			TextBox^ txtPhone = gcnew TextBox();
			txtPhone->Location = System::Drawing::Point(120, 140);
			txtPhone->Width = 200;
			inputForm->Controls->Add(txtPhone);

			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ id = txtID->Text;
				String^ CCID = txtFirstName;
				//String^ SD = txtLastName->Text; IMPORTANT JUST LAZY RN
				String^ ST = txtPhone->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Cust_Car_ServiceDate_Time (Cust_Car_Date_ID, Cust_Car_ID, Service_Date, Service_Time) VALUES (@id, @CCID, @SD, @ST)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@id", id);
					cmd->Parameters->AddWithValue("@CCID", CCID);
					//cmd->Parameters->AddWithValue("@SD", SD); ALSO IMPORTANT JUST LAZY RN
					cmd->Parameters->AddWithValue("@ST", ST);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		SchedCusRBTN->Checked = false;


	}
	private: System::Void DelCusRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (DelCusRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Customer Details";
			inputForm->Size = System::Drawing::Size(350, 200);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 100);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ id = txtID->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "DELETE FROM Customer WHERE Cust_ID = @id";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@id", id);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		DelCusRBTN->Checked = false;

	}
	private: System::Void RemSerRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (RemSerRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Service Details";
			inputForm->Size = System::Drawing::Size(350, 200);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Service ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 100);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ id = txtID->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "DELETE FROM Services WHERE Service_ID = @id";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@id", id);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		RemSerRBTN->Checked = false;

	}
	private: System::Void AddTechRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (AddTechRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Tech Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "First Name:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "Last Name:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			TextBox^ txtFirstName = gcnew TextBox();
			txtFirstName->Location = System::Drawing::Point(120, 60);
			txtFirstName->Width = 200;
			inputForm->Controls->Add(txtFirstName);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ FN = txtID->Text;
				String^ LN = txtFirstName->Text;


				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Technician (Tech_ID, Tech_FN, Tech_LN) VALUES (@id, @FN, @LN)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@FN", FN);
					cmd->Parameters->AddWithValue("@LN", LN);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}

		AddTechRBTN->Checked = false;

	}
	private: System::Void RemTechRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (RemTechRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Tech Details";
			inputForm->Size = System::Drawing::Size(350, 200);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Tech ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 100);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ id = txtID->Text;

				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "DELETE FROM Technician WHERE Tech_ID = @id";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@id", id);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}

		RemTechRBTN->Checked = false;

	}
	private: System::Void AddSerToTechRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (AddSerToTechRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Tech Service Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Tech ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);

			// First Name label and textbox
			Label^ lblFirstName = gcnew Label();
			lblFirstName->Text = "Service ID:";
			lblFirstName->Location = System::Drawing::Point(10, 60);
			lblFirstName->AutoSize = true;
			inputForm->Controls->Add(lblFirstName);

			TextBox^ txtFirstName = gcnew TextBox();
			txtFirstName->Location = System::Drawing::Point(120, 60);
			txtFirstName->Width = 200;
			inputForm->Controls->Add(txtFirstName);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ TID = txtID->Text;
				String^ SID = txtFirstName->Text;


				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Tech_To_Service (Tech_ID, Service_ID) VALUES (@TID, @SID)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@TID", TID);
					cmd->Parameters->AddWithValue("@SID", SID);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}
		AddSerToTechRBTN->Checked = false;

	}

	private: System::Void comboBox1_SelectedIndexChanged_2(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void dateTimePicker1_ValueChanged(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void radioButton2_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (radioButton2->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Enter Tech Details";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// ID label and textbox
			Label^ lblID = gcnew Label();
			lblID->Text = "Schedule ID:";
			lblID->Location = System::Drawing::Point(10, 20);
			lblID->AutoSize = true;
			inputForm->Controls->Add(lblID);

			TextBox^ txtID = gcnew TextBox();
			txtID->Location = System::Drawing::Point(120, 20);
			txtID->Width = 200;
			inputForm->Controls->Add(txtID);




			// ID label and textbox
			Label^ tID = gcnew Label();
			tID->Text = "Qualified Tech:";
			tID->Location = System::Drawing::Point(10, 60);
			tID->AutoSize = true;
			inputForm->Controls->Add(tID);

			ComboBox^ comboBox5 = gcnew ComboBox();
			comboBox5->DropDownStyle = ComboBoxStyle::DropDownList;
			comboBox5->FormattingEnabled = true;
			comboBox5->Items->AddRange(gcnew cli::array< System::Object^ >(2) { L"qualified tech1", L"qualified tech2" });
			comboBox5->Location = System::Drawing::Point(120, 60);
			comboBox5->Name = L"comboBox5";
			comboBox5->Size = System::Drawing::Size(121, 24);
			comboBox5->TabIndex = 9;
			inputForm->Controls->Add(comboBox5);


			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 190);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);

			// Show the form modally
			if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
			{
				// Retrieve user input
				String^ FN = txtID->Text;
				String^ LN = comboBox5->Text;


				// Build and execute the INSERT command into the MSSQL DB
				String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
				try {
					SqlConnection^ conn = gcnew SqlConnection(connString);
					conn->Open();

					String^ query = "INSERT INTO Technician (Tech_ID, Tech_FN, Tech_LN) VALUES (@id, @FN, @LN)";
					SqlCommand^ cmd = gcnew SqlCommand(query, conn);
					cmd->Parameters->AddWithValue("@FN", FN);
					cmd->Parameters->AddWithValue("@LN", LN);

					int rowsAffected = cmd->ExecuteNonQuery();
					MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
						"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

					conn->Close();
				}
				catch (Exception^ ex) {
					MessageBox::Show("Error: " + ex->Message,
						"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
				}
			}

		}

		radioButton2->Checked = false;
	}

	private: System::Void label3_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void radioButton3_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void tabPage8_Click(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void dateTimePicker1_ValueChanged_1(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void button1_Click(System::Object^ sender, System::EventArgs^ e) {

		DateTime selectedDate = dateTimePicker1->Value;


		DateTime targetDate = DateTime(2025, 4, 10);  // For example, April 10th, 2025


		if (selectedDate.Date == targetDate.Date) {

			Form^ inputForm = gcnew Form();
			inputForm->Text = "List of Information";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;

			// Customer Name label and sample text
			Label^ lblCustomerName = gcnew Label();
			lblCustomerName->Text = "Customer Name: Cim Po";
			lblCustomerName->Location = System::Drawing::Point(10, 20);
			lblCustomerName->AutoSize = true;
			inputForm->Controls->Add(lblCustomerName);

			// Technician label and sample text
			Label^ lblTechnician = gcnew Label();
			lblTechnician->Text = "Technician: Charles Vincent";
			lblTechnician->Location = System::Drawing::Point(10, 60);
			lblTechnician->AutoSize = true;
			inputForm->Controls->Add(lblTechnician);

			// Make label and sample text
			Label^ lblMake = gcnew Label();
			lblMake->Text = "Make: Mini";
			lblMake->Location = System::Drawing::Point(10, 100);
			lblMake->AutoSize = true;
			inputForm->Controls->Add(lblMake);

			// Model label and sample text
			Label^ lblModel = gcnew Label();
			lblModel->Text = "Model: Cooper";
			lblModel->Location = System::Drawing::Point(10, 140);
			lblModel->AutoSize = true;
			inputForm->Controls->Add(lblModel);

			// License Plate label and sample text
			Label^ lblLicensePlate = gcnew Label();
			lblLicensePlate->Text = "License Plate: LF2345";
			lblLicensePlate->Location = System::Drawing::Point(10, 180);
			lblLicensePlate->AutoSize = true;
			inputForm->Controls->Add(lblLicensePlate);

			// OK button
			Button^ btnOK = gcnew Button();
			btnOK->Text = "OK";
			btnOK->Location = System::Drawing::Point(120, 220);
			btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
			inputForm->AcceptButton = btnOK; // Allows Enter to click the button
			inputForm->Controls->Add(btnOK);


			inputForm->ShowDialog();
		}
		else {

			MessageBox::Show("Please select a different date", "Date Mismatch", MessageBoxButtons::OK, MessageBoxIcon::Warning);
		}
	}

	private: System::Void tabPage7_Click(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void button2_Click(System::Object^ sender, System::EventArgs^ e) {

		int jobCount = 3;
		String^ message = "Total Number of Jobs: " + jobCount.ToString();

		MessageBox::Show(message, "Job Summary", MessageBoxButtons::OK, MessageBoxIcon::Information);
	}
	private: System::Void button3_Click(System::Object^ sender, System::EventArgs^ e) {
	}

	private: System::Void comboBox2_SelectedIndexChanged_1(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void button3_Click_1(System::Object^ sender, System::EventArgs^ e) {
		double totalRevenue = 1500.00;

		String^ message = "Total Revenue : " + totalRevenue;

		MessageBox::Show(message, "Revenue Summary", MessageBoxButtons::OK, MessageBoxIcon::Information);
	}
	private: System::Void button4_Click(System::Object^ sender, System::EventArgs^ e) {

		String^ message = "Service: Engine Oil, License Plate: LF3455 , Make: Mini, Model: Cooper, Name: Cim" + "\nService: Tire Replacement, License Plate: GA5463 , Make: Toyota, Model: Camry, Name: Dave";

		MessageBox::Show(message, "Job Information", MessageBoxButtons::OK, MessageBoxIcon::Information);

	}

	private: System::Void button5_Click(System::Object^ sender, System::EventArgs^ e) {
		String^ message = "License Plate: LF3455 , Make: Mini, Model: Cooper, Date: 4/10/2025 Service: Engine Oil Cost: 750 Tech: Charles";
		MessageBox::Show(message, "Customer Information", MessageBoxButtons::OK, MessageBoxIcon::Information);
	}

	private: System::Void button6_Click(System::Object^ sender, System::EventArgs^ e) {
		String^ message = "Ricky, Sammi, Soyef";
		MessageBox::Show(message, "Technicians with no Work", MessageBoxButtons::OK, MessageBoxIcon::Information);
	}
	private: System::Void button7_Click(System::Object^ sender, System::EventArgs^ e) {
		String^ message = "Charles P";
		MessageBox::Show(message, "Tech Bonus", MessageBoxButtons::OK, MessageBoxIcon::Information);
	}

	private: System::Void label17_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void dateTimePicker10_ValueChanged(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void label19_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void label20_Click(System::Object^ sender, System::EventArgs^ e) {
	}
	private: System::Void ShowCusRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
		if (ShowCusRBTN->Checked) {
			Form^ inputForm = gcnew Form();
			inputForm->Text = "Current Customers";
			inputForm->Size = System::Drawing::Size(350, 300);
			inputForm->StartPosition = FormStartPosition::CenterParent;


			String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
			try {
				SqlConnection^ conn = gcnew SqlConnection(connString);
				conn->Open();

				String^ query = "Select Cust_FN, Cust_LN from Customer";
				SqlCommand^ cmd = gcnew SqlCommand(query, conn);

				conn->Close();
			}
			catch (Exception^ ex) {
				MessageBox::Show("Error: " + ex->Message,
					"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
			}
		}


	}
private: System::Void addCartoCustomerRBTN_CheckedChanged(System::Object^ sender, System::EventArgs^ e) {
	if (addCartoCustomerRBTN->Checked) {
		Form^ inputForm = gcnew Form();
		inputForm->Text = "Enter Car Details";
		inputForm->Size = System::Drawing::Size(350, 300);
		inputForm->StartPosition = FormStartPosition::CenterParent;

		// ID label and textbox
		Label^ lblID = gcnew Label();
		lblID->Text = "Choose Customer:";
		lblID->Location = System::Drawing::Point(10, 20);
		lblID->AutoSize = true;
		inputForm->Controls->Add(lblID);

		ComboBox^ comboBox3 = gcnew ComboBox();
		comboBox3->DropDownStyle = ComboBoxStyle::DropDownList;
		comboBox3->FormattingEnabled = true;
		
		try {
			String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
			SqlConnection^ conn = gcnew SqlConnection(connString);
			conn->Open();

			String^ query = "SELECT Cust_FN, Cust_LN FROM Customer"; // adjust column/table names as needed
			SqlCommand^ cmd = gcnew SqlCommand(query, conn);
			SqlDataReader^ reader = cmd->ExecuteReader();

			while (reader->Read()) {
				String^ name = reader["Cust_FN"]->ToString() + " " + reader["Cust_LN"]->ToString();

				// ComboBoxItem: display name, store ID
				comboBox3->Items->Add(name);
			}

			// To make the ComboBox display the "value" (name) instead of KeyValuePair string
			comboBox3->DisplayMember = "Value";
			comboBox3->ValueMember = "Key";

			reader->Close();
			conn->Close();
		}
		catch (Exception^ ex) {
			MessageBox::Show("Error loading customers: " + ex->Message,
				"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
		}



		comboBox3->Location = System::Drawing::Point(120, 20);
		comboBox3->Name = L"comboBox3";
		comboBox3->Size = System::Drawing::Size(121, 24);
		comboBox3->TabIndex = 9;

		// Add the ComboBox to the popout form (inputForm)
		inputForm->Controls->Add(comboBox3);
		String^ txtID = comboBox3->Text; // or comboBox1->SelectedItem->ToString();



		// First Name label and textbox
		Label^ lblFirstName = gcnew Label();
		lblFirstName->Text = "License Plate:";
		lblFirstName->Location = System::Drawing::Point(10, 60);
		lblFirstName->AutoSize = true;
		inputForm->Controls->Add(lblFirstName);

		TextBox^ txtFirstName = gcnew TextBox();
		txtFirstName->Location = System::Drawing::Point(120, 60);
		txtFirstName->Width = 200;
		inputForm->Controls->Add(txtFirstName);

		// Last Name label and textbox
		Label^ lblLastName = gcnew Label();
		lblLastName->Text = "Make:";
		lblLastName->Location = System::Drawing::Point(10, 100);
		lblLastName->AutoSize = true;
		inputForm->Controls->Add(lblLastName);

		ComboBox^ comboBox1 = gcnew ComboBox();
		comboBox1->DropDownStyle = ComboBoxStyle::DropDownList;
		comboBox1->FormattingEnabled = true;
		comboBox1->Items->AddRange(gcnew cli::array< System::Object^ >(3) { L"Chevy", L"Honda", L"Toyota" });
		comboBox1->Location = System::Drawing::Point(120, 100);
		comboBox1->Name = L"comboBox1";
		comboBox1->Size = System::Drawing::Size(121, 24);
		comboBox1->TabIndex = 9;

		// Add the ComboBox to the popout form (inputForm)
		inputForm->Controls->Add(comboBox1);
		String^ txtLastName = comboBox1->Text; // or comboBox1->SelectedItem->ToString();


		// Phone Number label and textbox
		Label^ lblPhone = gcnew Label();
		lblPhone->Text = "Model:";
		lblPhone->Location = System::Drawing::Point(10, 140);
		lblPhone->AutoSize = true;
		inputForm->Controls->Add(lblPhone);


		ComboBox^ comboBox2 = gcnew ComboBox();
		comboBox2->DropDownStyle = ComboBoxStyle::DropDownList;
		comboBox2->FormattingEnabled = true;
		comboBox2->Items->AddRange(gcnew cli::array< System::Object^ >(3) { L"model", L"model", L"model" });
		comboBox2->Location = System::Drawing::Point(120, 140);
		comboBox2->Name = L"comboBox1";
		comboBox2->Size = System::Drawing::Size(121, 24);
		comboBox2->TabIndex = 9;

		inputForm->Controls->Add(comboBox2);
		String^ txtPhone = comboBox2->Text;

		// OK button
		Button^ btnOK = gcnew Button();
		btnOK->Text = "OK";
		btnOK->Location = System::Drawing::Point(120, 190);
		btnOK->DialogResult = System::Windows::Forms::DialogResult::OK;
		inputForm->AcceptButton = btnOK; // Allows Enter to click the button
		inputForm->Controls->Add(btnOK);

		// Show the form modally
		if (inputForm->ShowDialog() == System::Windows::Forms::DialogResult::OK)
		{
			// Retrieve user input
			String^ id = txtID;
			String^ LP = txtFirstName->Text;
			String^ Make = txtLastName;
			String^ Model = txtPhone;

			// Build and execute the INSERT command into the MSSQL DB
			String^ connString = "Data Source=localhost\\sqlexpress;Initial Catalog=Mechanic_Shop;Integrated Security=True";
			try {
				SqlConnection^ conn = gcnew SqlConnection(connString);
				conn->Open();

				String^ query = "INSERT INTO Car (Car_ID, License_Plate, Make_ID, Model_ID) VALUES (@id, @LP, @Make, @Model)";
				SqlCommand^ cmd = gcnew SqlCommand(query, conn);
				cmd->Parameters->AddWithValue("@id", id);
				cmd->Parameters->AddWithValue("@LP", LP);
				cmd->Parameters->AddWithValue("@Make", Make);
				cmd->Parameters->AddWithValue("@Model", Model);

				int rowsAffected = cmd->ExecuteNonQuery();
				MessageBox::Show("Inserted successfully! Rows affected: " + rowsAffected.ToString(),
					"Success", MessageBoxButtons::OK, MessageBoxIcon::Information);

				conn->Close();
			}
			catch (Exception^ ex) {
				MessageBox::Show("Error: " + ex->Message,
					"Database Error", MessageBoxButtons::OK, MessageBoxIcon::Error);
			}
		}

	}

	AddCarRBTN->Checked = false;


}
};
}
